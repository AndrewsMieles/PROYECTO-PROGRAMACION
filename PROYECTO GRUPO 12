from abc import ABC, abstractmethod
# Arriaga Sanchez Genesis, Bajaña Tarira Jenniffer, Landazuri Barcia Liliana, Mieles Piloso Andrews, Vera Saltos Jimmy


class Persona1(ABC):

    def _init_(self, cedula: str = None, nombre: str = None, apellido: str = None, email: str = None,
                 telefono: str = None, direccion: str = None, carrera: str = None,  numero_libros: int = 0,
                 activo: bool = True):
        self._cedula = cedula
        self._nombre = nombre
        self._apellido = apellido
        self._email = email
        self._telefono = telefono
        self._direccion = direccion
        self._carrera = carrera
        self._numero_libros = numero_libros
        self._activo = activo


    @property
    def cedula(self):
        return self._cedula

    @cedula.setter
    def cedula(self, cedula):
        self._cedula = cedula

    @property
    def nombre(self):
        return self._nombre

    @nombre.setter
    def nombre(self, nombre):
        self._nombre = nombre

    @property
    def apellido(self):
        return self._apellido

    @apellido.setter
    def apellido(self, apellido):
        self._apellido = apellido

    @property
    def email(self):
        return self._email

    @email.setter
    def email(self, email):
        self._email = email

    @property
    def telefono(self):
        return self._telefono

    @telefono.setter
    def telefono(self, telefono):
        self._telefono = telefono

    @property
    def direccion(self):
        return self._direccion

    @direccion.setter
    def direccion(self, direccion):
        self._direccion = direccion

    @property
    def carrera(self):
        return self._carrera

    @carrera.setter
    def carrera(self, carrera):
        self._carrera = carrera

    @property
    def numero_libros(self):
        return self._numero_libros

    @numero_libros.setter
    def numero_libros(self, numero_libros):
        self._numero_libros = numero_libros

    @property
    def activo(self):
        return self._activo

    @activo.setter
    def activo(self, activo):
        self._activo = activo

    # @abstractmethod
    def pedir_libro(self):
        pass

    # @abstractmethod
    def devolver_libro(self):
        pass

    def _str_(self):
        return f"Cédula: {self._cedula}\nNombre: {self._nombre}\nApellido: {self._apellido}\nEmail: {self._email}\n" \
               f"Teléfono: {self._telefono}\nDirección: {self._direccion}\nNúmero de libros: {self._numero_libros}" \
               f"\nActivo: {self._activo}\nCarrera: {self._carrera}"


if _name_ == '_main_':
    pass
    
    from Proyecto.persona import Persona1
# Arriaga Sanchez Genesis, Bajaña Tarira Jenniffer, Landazuri Barcia Liliana, Mieles Piloso Andrews, Vera Saltos Jimmy

class Docente(Persona1):
    contador_docente = 0

    def _init_(self, cedula: str = None, nombre: str = None, apellido: str = None, email: str = None,
                 telefono: str = None, direccion: str = None, carrera: str = None,  numero_libros: int = 0,
                 activo: bool = True, titulo_3er_nivel: str = None, titulo_4to_nivel: str = None):
        super()._init_(cedula=cedula, nombre=nombre, apellido=apellido, email=email, telefono=telefono,
                         direccion=direccion, carrera=carrera, numero_libros=numero_libros, activo=activo)
        Docente.contador_docente += 1
        self._id = Docente.contador_docente
        self._titulo_3er_nivel = titulo_3er_nivel
        self._titulo_4to_nivel = titulo_4to_nivel

    @property
    def id(self):
        return self._id

    # @id.setter
    # def id(self, email_cambiado):
    #     self._id = id

    @property
    def titulo_3er_nivel(self):
        return self._titulo_3er_nivel

    @titulo_3er_nivel.setter
    def titulo_3er_nivel(self, titulo_3er_nivel):
        self._titulo_3er_nivel = titulo_3er_nivel

    @property
    def titulo_4to_nivel(self):
        return self._titulo_4to_nivel

    @titulo_4to_nivel.setter
    def titulo_4to_nivel(self, titulo_4to_nivel):
        self._titulo_4to_nivel = titulo_4to_nivel

    def pedir_libro(self):
        if self.activo and self.numero_libros < 3:
            self.numero_libros += 1
            return True
        return False

    def devolver_libro(self):
        if self.activo and self.numero_libros > 0:
            self.numero_libros -= 1
            return True
        return False

    def _str_(self):
        return f"Cédula: {self._cedula}\nNombre: {self._nombre}\nApellido: {self._apellido}\nEmail: {self._email}\n" \
               f"Teléfono: {self._telefono}\nDirección: {self._direccion}\nNúmero de libros: {self._numero_libros}" \
               f"\nActivo: {self._activo}\nCarrera: {self._carrera}\nId: {self._id}\n" \
               f"Titulo 3ª nivel: {self._titulo_3er_nivel}\nTitulo 4ª nivel: {self._titulo_4to_nivel}"


if _name_ == '_main_':
    doc1= Docente(cedula="0123457759", nombre="Marcelo", apellido= "Villalba", email="Marcelo@gmail.com",
               telefono="0944563344", direccion="Avenida El Ejercito", numero_libros=2, activo=True,
                   carrera="Finanzas", titulo_3er_nivel="Licenciatura en Contaduria ",
                   titulo_4to_nivel="Magister en Finanzas")
    doc2= Docente(cedula="0964553423", nombre="Jessica", apellido= "Moncada", email="Jessica@gmail.com",
                  telefono="0960356422", direccion="Avenida Juan TancaMarengo", numero_libros=4, activo=False,
                  carrera="Psicologia", titulo_3er_nivel="Licenciada en Psicopedagogia",
                  titulo_4to_nivel="Magister en estudios sociales")
    print('*'.center(100, '*'))
    print(doc1)
    print('*'.center(100, '*'))
    print(doc2)
    
    from Proyecto.persona import Persona1
# Arriaga Sanchez Genesis, Bajaña Tarira Jenniffer, Landazuri Barcia Liliana, Mieles Piloso Andrews, Vera Saltos Jimmy


class Estudiante(Persona1):
    contador_estudiante = 0

    def _init_(self, cedula: str = None, nombre: str = None, apellido: str = None, email: str = None,
                 telefono: str = None, direccion: str = None, carrera: str = None,  numero_libros: int = 0,
                 activo: bool = True, nivel: int = 0):
        super()._init_(cedula=cedula, nombre=nombre, apellido=apellido, email=email, telefono=telefono,
                         direccion=direccion, carrera=carrera, numero_libros=numero_libros, activo=activo)
        Estudiante.contador_estudiante += 1
        self._id = Estudiante.contador_estudiante
        self._nivel = nivel

    @property
    def id(self):
        return self._id

    # @id.setter
    # def id(self, email_cambiado):
    #     self._id = id

    @property
    def nivel(self):
        return self._nivel

    @nivel.setter
    def nivel(self, nivel):
        self._nivel = nivel

    def pedir_libro(self):
        if self.activo and self.numero_libros < 3:
            self.numero_libros += 1
            return True
        return False

    def devolver_libro(self):
        if self.activo and self.numero_libros > 0:
            self.numero_libros -= 1
            return True
        return False

    def _str_(self):
        return f"Cédula: {self._cedula}\nNombre: {self._nombre}\nApellido: {self._apellido}\nEmail: {self._email}\n" \
               f"Teléfono: {self._telefono}\nDirección: {self._direccion}\nNúmero de libros: {self._numero_libros}" \
               f"\nActivo: {self._activo}\nCarrera: {self._carrera}\nId: {self._id}\nNivel: {self._nivel}"


if _name_ == '_main_':
    est1 = Estudiante(cedula="0123456789", nombre="Pablo", apellido="Pérez", email="pablo@gmail.com",
                      telefono="0960354278", direccion="Francisco de Orellana", carrera="Ingeniería", numero_libros=2,
                      activo=True, nivel=2)
    est2 = Estudiante(cedula="0987456123", nombre="Luisa", apellido="López", email="luisa@gmail.com",
                      telefono="0936157689", direccion="Avenida Sixto Garay", carrera="Medicina",
                      numero_libros=4, activo=False, nivel=3)
    print('*'.center(100, '*'))
    print(est1)
    print('*'.center(100, '*'))
    print(est2)
    
    rom abc import ABC, abstractmethod


# Arriaga Sanchez Genesis, Bajaña Tarira Jenniffer, Landazuri Barcia Liliana, Mieles Piloso Andrews, Vera Saltos Jimmy


class Material(ABC):
    def _init_(self, codigo: str = None, autor: str = None, titulo: str = None, anio: int = None,
                 editorial: str = None, disponible: bool = None, cantidad_disponible: int = None):
        self._codigo = codigo
        self._autor = autor
        self._titulo = titulo
        self._anio = anio
        self._editorial = editorial
        self._disponible = disponible
        self._cantidad_disponible = cantidad_disponible

    @property
    def codigo(self):
        return self._codigo

    @codigo.setter
    def codigo(self, codigo):
        self._codigo = codigo

    @property
    def autor(self):
        return self._autor

    @autor.setter
    def autor(self, autor):
        self._autor = autor

    @property
    def titulo(self):
        return self._titulo

    @titulo.setter
    def titulo(self, titulo):
        self._titulo = titulo

    @property
    def anio(self):
        return self.anio

    @anio.setter
    def anio(self, anio):
        self._anio = anio

    @property
    def editorial(self):
        return self._editorial

    @editorial.setter
    def editorial(self, editorial):
        self._editorial = editorial

    @property
    def disponible(self):
        return self._disponible

    @disponible.setter
    def disponible(self, disponible):
        self._disponible = disponible

    @property
    def cantidad_disponible(self):
        return self._cantidad_disponible

    @cantidad_disponible.setter
    def cantidad_disponible(self, cantidad_disponible):
        self._cantidad_disponible = cantidad_disponible

    # @abstractmethod
    def actualizar_disponibilidad(self):
        pass

    def str(self):
        return f"Codigo: {self._codigo}\nAutor: {self._autor}\nTitulo: {self._titulo}\nAño: {self._anio}\n" \
               f"Editorial: {self._editorial}\nDisponible: {self._disponible}\n" \
               f"Cantidad disponible: {self._cantidad_disponible}"

    # def ver_disponibilidad(self):
    #     return (f'{self._disponible} {self._cantidad_disponible}')


if _name_ == '_main_':
    pass
    
    
    from Proyecto.material import Material
# Arriaga Sanchez Genesis, Bajaña Tarira Jenniffer, Landazuri Barcia Liliana, Mieles Piloso Andrews, Vera Saltos Jimmy


class Revista(Material):
    contador_revista = 0

    def _init_(self, codigo: str = None, autor: str = None, titulo: str = None, anio: int = None,
                 editorial: str = None, disponible: bool = None, cantidad_disponible: int = None,
                 tipo: str = None):
        super()._init_(codigo=codigo, autor=autor, titulo=titulo, anio=anio, editorial=editorial,
                         disponible=disponible, cantidad_disponible=cantidad_disponible)
        Revista.contador_revista += 1
        self._id = Revista.contador_revista
        self._tipo = tipo

    @property
    def id(self):
        return self._id

    # @id.setter
    # def id(self, email_cambiado):
    #     self._id = id

    @property
    def tipo(self):
        return self._tipo

    @tipo.setter
    def tipo(self, tipo):
        self._tipo = tipo

    def _str_(self):
        return f"Codigo: {self._codigo}\nAutor: {self._autor}\nTitulo: {self._titulo}\nAño: {self._anio}\n" \
               f"Editorial: {self._editorial}\nDisponible: {self._disponible}\n" \
               f"Cantidad disponible: {self._cantidad_disponible}\nId:{self._id}\nTipo: {self._titulo}"


if _name_ == '_main_':
    revista1 = Revista(codigo=" 10.7560/IC47402", autor="Pierre Mounier Kuhn", titulo="Information & culture",
                       anio=2012, editorial="volume47_number4_2012", disponible=False, cantidad_disponible=102,
                       tipo="online")
    revista2 = Revista(codigo=" 10.7660/IC47702", autor="Smith J.M.& Davis H.",
                       titulo="Language acquisition among autistic children", anio=2019,
                       editorial="volume5_Issue2_2011", disponible=True, cantidad_disponible=104, tipo="online")

    print('*'.center(100, '*'))
    print(revista1)
    print('*'.center(100, '*'))
    print(revista2)
    
    
    from Proyecto.material import Material
# Arriaga Sanchez Genesis, Bajaña Tarira Jenniffer, Landazuri Barcia Liliana, Mieles Piloso Andrews, Vera Saltos Jimmy


class Libro(Material):
    contador_libro = 0

    def _init_(self, codigo: str = None, autor: str = None, titulo: str = None, anio: int = None,
                 editorial: str = None, disponible: bool = None, cantidad_disponible: int = None,
                 tipo_pasta: str = None):
        super()._init_(codigo=codigo, autor=autor, titulo=titulo, anio=anio, editorial=editorial,
                         disponible=disponible, cantidad_disponible=cantidad_disponible)
        Libro.contador_libro += 1
        self._id = Libro.contador_libro
        self._tipo_pasta = tipo_pasta

    @property
    def id(self):
        return self._id

    # @id.setter
    # def id(self, email_cambiado):
    #     self._id = id

    @property
    def tipo_pasta(self):
        return self._tipo_pasta

    @tipo_pasta.setter
    def tipo_pasta(self, tipo_pasta):
        self._tipo_pasta = tipo_pasta

    def _str_(self):
        return f"Codigo: {self._codigo}\nAutor: {self._autor}\nTitulo: {self._titulo}\nAño: {self._anio}\n" \
               f"Editorial: {self._editorial}\nDisponible: {self._disponible}\n" \
               f"Cantidad disponible: {self._cantidad_disponible}\nId:{self._id}\nTipo de pasta: {self._tipo_pasta}"


if _name_ == '_main_':
    libro1 = Libro(codigo="620.1/C87", autor="Craig Jr Roy", titulo="Mecanica de materiales", anio= 2002,
                   editorial="continental", disponible=True, cantidad_disponible=30, tipo_pasta="cubierta carton")
    libro2 = Libro(codigo="doi12.123", autor="McGoldrick J.Giordano",
                   titulo="Back to the future:An examination of the native american holocaust experience",
                   anio=2002, editorial="tercera edicion", disponible=True, cantidad_disponible=0,
                   tipo_pasta="Electronico")
    print('*'.center(100, '*'))
    print(libro1)
    print('*'.center(100, '*'))
    print(libro2)
